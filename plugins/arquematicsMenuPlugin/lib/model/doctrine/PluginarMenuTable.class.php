<?php

/**
 * PluginarMenuTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PluginarMenuTable extends Doctrine_Table
{
  /**
  * Returns an instance of this class.
  *
  * @return object PluginarMenuTable
  */
 public static function getInstance()
 {
    return Doctrine_Core::getTable('PluginarMenu');
 }
    
  /**
  * devuelve un registro por la id
  * 
  * @param <$id>
  * @return <arProfileList>
  */
  public static function retrieveById($id, $conn = false)
  {

      if (!$conn)
      {
           $q = Doctrine::getTable('arMenu')->createQuery('c')
            ->where("c.id = ?", $id); 
      }
       else {
           $q = Doctrine_Query::create($conn)
            ->from( 'arMenu c')
            ->where("c.id = ?", $Id);
      }
   
   
    return $q->fetchOne();
  }
  
  public static function retrieveByName($name)
  {

    $q = Doctrine::getTable('arMenu')->createQuery('c')
            ->where("c.name = ?", $name); 
   
    return $q->fetchOne();
  }
  
  public static function retrieveBySlotId($name)
  {

    $q = Doctrine::getTable('arMenu')->createQuery('c')
            ->where("c.slot_id = ?", $name); 
   
    return $q->fetchOne();
  }
  
  
  public function queryNodesByRootId($rootId, $conn = false)
  {
      if (!$conn)
      {
         $q = Doctrine::getTable('arMenu')->createQuery('c')
               ->where("c.root_id = ?", $rootId);
      }
      else
      {
           $q = Doctrine_Query::create($conn)
            ->from( 'arMenu c')
            ->where("c.root_id = ?", $rootId);
           
           //echo $q->getSqlQuery();
      }
      
       
       return $q;
  }
  
  public function countNodesByRootId($rootId, $conn = false)
  {
      
      $query = Doctrine::getTable('arMenu')->queryNodesByRootId($rootId, $conn)
       ->select('COUNT(c.id)');
      
      

      return $query->execute(array(), Doctrine_Core::HYDRATE_SINGLE_SCALAR);
  }
  
  /**
   * devuelve el nodo raiz
   * 
   * @param string $rootId
   * @return <node|boolean>
   */
  public function retrieveRootNodeByRootId($rootId)
  {
      $ret = false;
      
      $nodes = Doctrine::getTable('arMenu')->retrieveNodesByRootId($rootId);
      
      if ($nodes && (count($nodes) > 0))
      {
          
         return  $nodes->getFirst();
      }
      
      return $ret;
  } 
  
  /**
   * devuelve todos los nodos
   * 
   * @param <string $rootId>
   * @return <array of nodes>
   */
  public function retrieveNodesByRootId($rootId)
  {
    $ret = array();
    

        $treeObject = Doctrine::getTable('arMenu')->getTree();
        
        if ($treeObject && is_object($treeObject))
        {
            $roots = $treeObject->fetchRoots();
       
            if ($roots && (count($roots) > 0))
            {
                for ($find = false, $i = count($roots) -1; 
                    (!$find) && ($i >= 0); $i--)
                {
                        $root = $roots[$i];
                        $find = ($root && isset($root['root_id'])
                                && ($root['root_id'] == $rootId));
                        if ($find)
                        {
                          $options = array('root_id'=>$root['root_id']);
                          $ret = $treeObject->fetchTree($options);
                        }
                        
                }
            
            }
        
        }
   
    
    return $ret;
    
  }

  
}