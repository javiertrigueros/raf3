<?php

/**
 * PluginarTag
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class PluginarTag extends BasearTag
{
    private $active = false;
    
    /**
     * activar/desactivar el filtro del tag
     * 
     * @param <boolean $value>
     */
    public function setActive($value)
    {
       $this->active = $value;
    }
    /**
     * esta activo el filtro para el tag
     * 
     * <@return boolean>
     */
    public function getActive()
    {
        return $this->active;
    }
    /**
     * es un tag valido
     * 
     * @return boolean
     */
    /*
    public function hasValid()
    {
        return true;   
    }*/
    
    
    /**
   * devuelve una cadena con el contenido del tag
   * encriptado
   * 
   * @param <authUser $authUser>
   * @return <String> 
   */
  public function getEncryptTxt($authUser)
  {
      
     $arTagEnc = Doctrine_Core::getTable('arTagEnc')
                        ->retrieveContentById($this->getId(), $authUser->getId());
  
     if ($arTagEnc &&  is_object($arTagEnc))
     {
         return $arTagEnc->getContent();
     }
     else return '';
  }
  
  /**
   * cuenta el n√∫mero de veces que un usuario
   * usa un tag
   * 
   * @param <type $authUser>
   * @return int
   */
  public function countTag($profileId)
  {
       return Doctrine_Core::getTable('arTag')
                        ->countTag($profileId, $this->getId());
  }

}