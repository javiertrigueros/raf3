<?php

/**
 * PluginarDropFile
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class PluginarDropFile extends BasearDropFile
{ 
    const PERSISTENCE_SMALL = "small";
    const PERSISTENCE_MED = "med";
    const PERSISTENCE_BIG = "big";
            
    public static $fileStyle = array('mini', 'small','normal','big');
    
    public static $inputExt = array(
        'dxf', 'dwg', 'docx','doc', 'ppt','pptx','xls'
    );
    public static $outExt = array(
        'pdf','csv', 'png', 'svg'
    );
    
    public static $allMimeTypes = array(
        'text/h323' => '323',
        'application/epub+zip' => 'epub' ,
        'audio/aac' => 'aac',
        'application/abiword' => 'abw',
        'application/internet-property-stream' => 'acx',
        'application/illustrator' => 'ai',
        'audio/aiff' => 'aif',
        'video/x-ms-asf' => 'asf',
        'application/x-asp' => 'asp', 
        'video/x-ms-asf' => 'asr',
        'video/x-ms-asf' => 'asx',
        'audio/basic'  => 'au',
        'video/avi' => 'avi',
        'application/olescript'  => 'axs',
        'text/plain'  => 'bas',
        'application/octet-stream' => 'bin',
        'image/bmp'  => 'bmp',
        'application/x-bzip2'  => 'bz2',
        'text/x-csrc'  => 'c',
        'text/x-c++src'  => 'c++',
        'application/vndms-cab-compressed'  => 'cab',
        'application/vndms-pkiseccat'  => 'cat',
        'application/x-director'  => 'cct',
        'application/cdf'  =>  'cdf',
        'application/x-x509-ca-cert' =>  'cer',
        'application/x-cfm' => 'cfc',
        'application/x-cfm' => 'cfm',
        'application/x-java' => 'class',
        'application/x-msclip' => 'clp',
        'image/x-cmx' => 'cmx',
        'image/cis-cod' => 'cod',
        'text/x-c++src' => 'cp',
        'application/x-cpio' => 'cpio',
        'text/x-c++src' => 'cpp',
        'application/x-mscardfile' => 'crd',
        'application/x-x509-ca-cert' => 'crt',
        'application/pkix-crl' => 'crl',
        'application/x-csh' => 'csh',
        'text/css' => 'css',
        'application/x-director' => 'cst',
        'text/csv' => 'csv',
        'application/x-director' => 'cxt',
        'application/x-director' => 'dcr',
        'application/x-x509-ca-cert' => 'der',
        'image/bmp' => 'dib',
        'text/x-patch' => 'diff',
        'application/x-director' => 'dir',
        'application/x-msdownload' => 'dll',
        'application/octet-stream' => 'dms',
        'application/vndms-word' => 'doc',
        'application/vnd.ms-word.document.macroEnabled.12' => 'docm',
        'application/vnd.openxmlformats-officedocument.wordprocessingml.document' => 'docx',
        'application/msword' => 'dot',
        'application/vnd.ms-word.template.macroEnabled.12' => 'dotm',
        'application/vnd.openxmlformats-officedocument.wordprocessingml.template' => 'dotx',
        'application/x-stata' => 'dta',
        'video/x-dv' => 'dv',
        'application/x-dvi' => 'dvi',
        'image/x-dwg' => 'dwg',
        'application/x-autocad' => 'dxf',
        'application/x-director' => 'dxr',
        'application/x-elc' => 'elc',
        'message/rfc822' => 'eml',
        'application/x-endnote-library' => 'enl',
        'application/postscript' => 'eps',
        'text/x-setext' => 'etx',
        'application/envoy' => 'evy',
        'application/x-msdos-program' => 'exe',
        'application/fractals' => 'fif',
        'x-world/x-vrml' => 'flr',
        'application/vndframemaker' => 'fm',
        'application/x-director' => 'fqd',
        'image/gif' => 'gif',
        'application/tar' => 'gtar',
        'application/gzip' => 'gz',
        'text/x-chdr' => 'h',
        'application/x-hdf' => 'hdf',
        'application/winhlp' => 'hlp',
        'application/binhex' => 'hqx',  
        'application/hta' => 'hta',
        'text/x-component' => 'htc',
        'text/html' => 'htm',
        'text/html' => 'html',
        'text/webviewhtml' => 'htt',
        'image/x-ico' => 'ico',
        'text/calendar' => 'ics',
        'image/ief' => 'ief',
        'application/x-iphone' => 'iii',
        'application/x-indesign' => 'indd',
        'application/x-internet-signup' => 'ins',
        'application/x-internet-signup' => 'isp',
        'text/vndsunj2meapp-descriptor' => 'jad',
        'application/java-archive' => 'jar', 
        'text/x-java' => 'java',
        'image/jpeg' => 'jpg',
        'image/jp2' => 'jp2',
        'image/x-freehand' => 'fh',
        'image/x-freehand' => 'fhc',
        'image/x-freehand' => 'fh4',
        'image/x-freehand' => 'fh5',
        'image/x-freehand' => 'fh7',
        'image/svg+xml' => 'svg',
        'image/svg+xml' => 'svgz',
        'image/jp2' => 'jpx',
        'image/x-xcf' => 'xcf',
        'image/vnd.djvu' => 'djvu',
        'image/vnd.djvu' => 'djv',
        'text/javascript' => 'js',
        'application/vndgoogle-earthkml+xml' => 'kml',
        'application/vndgoogle-earthkmz' => 'kmz',
        'application/x-latex' => 'latex',
        'application/x-lha' => 'lha',
        'application/x-endnote-library' => 'lib',
        'application/x-labview' => 'llb',
        'text/x-log' => 'log',
        'video/x-la-asf' => 'lsf',
        'video/x-la-asf' => 'lsx',
        'application/x-labview-exec' => 'lvx',
        'application/x-lha' => 'lzh',
        'text/x-objcsrc' => 'm',
        'video/mpeg' => 'm1v',
        'video/mpeg' => 'm2v',
        'audio/x-mpegurl' => 'm3u',
        'audio/m4a' => 'm4a',
        'video/mp4' => 'm4v',
        'application/mathematica' => 'ma',
        'message/rfc822' => 'mail',
        'application/x-troff-man' => 'man',
        'application/x-mathcad' => 'mcd',
        'application/vndms-access' => 'mdb',
        'application/x-troff-me' => 'me', 
        'application/x-shockwave-flash' => 'mfp',
        'message/rfc822' => 'mht',
        'message/rfc822' => 'mhtml',
        'audio/x-midi' => 'mid',
        'audio/x-midi' => 'midi',
        'application/vndframemaker' => 'mif',
        'application/x-msmoney' => 'mny',
        'video/quicktime' => 'mov',
        'video/mpeg' => 'mp2',
        'audio/mpeg' => 'mp3',
        'video/mpeg' => 'mpa',
        'video/mpeg' => 'mpe',
        'video/mpeg' => 'mpeg',
        'video/mpeg' => 'mpg',
        'application/vndms-project' => 'mpp',
        'video/mpeg' => 'mpv2',
        'video/quicktime' => 'mqv',
        'application/x-troff-ms' => 'ms',
        'application/x-msmediaview' => 'mvb',
        'application/x-maple' => 'mws',
        'application/mathematica' => 'nb',
        'message/rfc822' => 'nws',
        'application/oda' => 'oda',
        'application/vnd.oasis.opendocument.chart' => 'odc',
        'application/vnd.oasis.opendocument.formula' => 'odf',
        'application/vnd.oasis.opendocument.graphics' => 'odg',
        'application/vnd.oasis.opendocument.presentation' => 'odp',
        'application/vnd.oasis.opendocument.spreadsheet' => 'ods',
        'application/vnd.oasis.opendocument.spreadsheet-template' => 'ots',
        'application/vnd.oasis.opendocument.text-template' => 'ott',
        'application/vnd.oasis.opendocument.text' => 'odt',
        'application/ogg' => 'ogg',
        'application/msonenote' => 'one',
        'application/x-x509-ca-cert' => 'p12',
        'text/x-patch' => 'patch',
        'image/x-portable-bitmap' => 'pbm', 
        'image/x-photo-cd' => 'pcd', 
        'image/x-pict' => 'pct',
        'application/pdf' => 'pdf',
        'application/x-pkcs12' => 'pfx',
        'image/x-portable-graymap' => 'pgm', 
        'application/x-php' => 'php',
        'image/x-pict' => 'pic',
        'image/x-pict' => 'pict',
        'image/jpeg' => 'pjpeg',
        'application/x-perl' => 'pl',
        'audio/x-mpegurl' => 'pls',
        'application/yndms-pkipko' => 'pko',
        'application/x-perl','text/x-perl' => 'pm',
        'application/x-perfmon' => 'pmc',
        'image/png' => 'png',
        'image/x-portable-anymap' => 'pnm',
        'text/x-pod' => 'pod',
        'application/vndms-powerpointtemplatemacroEnabled12' => 'potm',
        'application/vndopenxmlformats-officedocumentpresentationmltemplate' => 'potx',
        'application/vndms-powerpointaddinmacroEnabled12'=> 'ppam',
        'image/x-portable-pixmap' => 'ppm',
        'application/vndms-powerpoint' => 'pps',
        'application/vnd.ms-powerpoint.slideshow.macroEnabled.12' => 'ppsm',
        'application/vnd.openxmlformats-officedocument.presentationml.slideshow' => 'ppsx',
        'application/vnd.ms-powerpoint' => 'ppt',
        'application/vnd.ms-powerpoint.presentation.macroEnabled.12' => 'pptm',
        'application/vnd.openxmlformats-officedocument.presentationml.presentation' => 'pptx',
        'application/pics-rules' => 'prf',
        'application/postscript' => 'ps',
        'application/photoshop' => 'psd',
        'application/vndms-publisher' => 'pub',
        'text/x-python' => 'py',
        'video/quicktime' => 'qt' ,
        'audio/vndrn-realaudio' => 'ra',
        'audio/vndrn-realaudio' => 'ram',
        'application/rar' => 'rar',
        'image/x-cmu-raster' => 'ras',
        'image/x-rgb' => 'rgb',
        'application/vndrn-realmedia' => 'rm' ,
        'audio/mid' =>  'rmi',
        'application/x-troff' => 'roff',
        'audio/vndrn-realaudio' => 'rpm',
        'application/rtf' => 'rtf',
        'application/rtf' => 'rtx',
        'video/vndrn-realvideo' => 'rv',
        'application/sas' => 'sas',
        'application/spss' => 'sav',
        'application/x-msschedule' => 'scd',
        'text/x-scriptscheme' => 'scm',
        'text/scriptlet' => 'sct',
        'application/spss' => 'sd2',
        'application/x-sea' => 'sea',
        'application/x-sh' => 'sh',
        'application/x-shar' => 'shar',
        'text/html' => 'shtml',
        'application/stuffit' => 'sit',
        'application/smil' => 'smil',
        'audio/basic' => 'snd',
        'application/x-shockwave-flash' => 'spl',
        'application/spss' => 'spo',
        'text/x-sql' => 'sql',
        'application/x-wais-source' => 'src',
        'application/vndms-pkicertstore' => 'sst',
        'application/sla' => 'stl',
        'text/html'=> 'stm',
        'application/x-director' => 'swa',
        'application/x-shockwave-flash' => 'swf',
        'application/vndsunxmlwriter' => 'sxw',
        'application/x-troff' => 't',
        'application/tar' => 'tar',
        'application/x-tcl' => 'tcl',
        'application/x-tex' => 'tex',
        'image/x-targa' => 'tga',
        'application/gzip' => 'tgz',
        'image/tiff' => 'tif',
        'image/tiff' => 'tiff',
        'application/ms-tnef' => 'tnef',
        'application/x-bittorrent' => 'torrent',
        'application/x-tex-tfm' => 'tfm',
        'application/x-troff' => 'tr',
        'application/x-msterminal' => 'trm',
        'text/tsv' => 'tsv',
        'application/twb' => 'twb',
        'application/twb' => 'twbx',
        'text/plain' => 'txt',
        'text/prs.lines.tag' => 'dsc',
        'text/iuls' => 'uls',
        'application/x-ustar' => 'ustar',
        'text/x-vcard'=> 'vcf',
        'x-world/x-vrml' => 'vrml',
        'application/vndvisio' => 'vsd',
        'application/x-director' => 'w3d',
        'application/x-webarchive' =>'war',
        'audio/wav' => 'wav',
        'application/vndms-works' => 'wks',
        'audio/x-ms-wma' => 'wma',
        'image/x-wmf' => 'wmf',
        'video/x-ms-wmv' => 'wmv',
        'application/x-ms-wmz' => 'wmz',
        'application/wordperfect' => 'wpd',
        'application/vndms-works' => 'wps',
        'application/x-mswrite' => 'wri',
        'x-world/x-vrml' => 'wrl',
        'image/x-xbitmap' => 'xbm',
        'text/x-c' => 'cc',
        'text/html' => 'xhtml', 
        'application/vndms-excel' => 'xla',
        'application/vndms-exceladdinmacroEnabled12' => 'xlam',
        'application/vndms-excel' => 'xlc',
        'application/vndms-excel' => 'xll',
        'application/vndms-excel' => 'xlm',
        'application/vndms-excel' => 'xls',
        'application/vnd.ms-excel.sheet.binary.macroEnabled.12' => 'xlsb',
        'application/vnd.ms-excel.sheet.macroEnabled.12' => 'xlsm',
        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' => 'xlsx',
        'application/vndms-excel' => 'xlt',
        'application/vndms-exceltemplatemacroEnabled12' => 'xltm',
        'application/vndopenxmlformats-officedocumentspreadsheetmltemplate' => 'xltx',
        'application/vndms-excel' => 'xlw',
        'text/xml' => 'xml',
        'image/x-xpixmap' => 'xpm' ,
        'application/vndms-xpsdocument' => 'xps',
        'text/xsl' => 'xsl',
        'image/x-xwindowdump' =>  'xwd',
        'application/x-compress' => 'z',
        'application/zip' => 'zip'
    );
    //son tipos miem que se pueden visualizar en
    // el muro
    public static $appMime = array(
        'application/x-autocad', //autocad
        'image/x-dwg', //autocad
        'application/photoshop',
        'application/zip',
        'application/rar',
        //pdf
        'application/pdf',
        //office
        'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
        //powerpoint
        'application/vnd.ms-powerpoint',
        'application/vnd.exemplification-officedocument.presentationml.presentation',
        'application/vnd.openxmlformats-officedocument.presentationml.presentation',
        'application/excel',
        'application/vnd.ms-excel',
        //open office
        'application/vnd.oasis.opendocument.text',
        'application/vnd.oasis.opendocument.presentation',
        'application/vnd.oasis.opendocument.spreadsheet',
        //3d STL
        'application/sla'
    );
    //webm/gifv are video formats, not image formats. gifv is basically mp4 with fallback to gif
    public static $imageMime =  array(
                                'image/x-portable-bitmap',
                                'image/jpg',
                                'image/jpeg',
                                'image/pjpeg',
                                'image/jpe',
                                'image/svg+xml',
                                'image/vnd.djvu',
                                'image/x-xcf',
                                'image/jfif',
                                'image/jfi',
                                'image/gif',
                                'image/jp2',
                                'image/jpc',
                                'image/wdp',
                                'image/hdp',
                                'image/png',
                                'image/bmp',
                                'image/tiff',
                                'image/tif');
    
    public function loadLater()
    {
        return ($this->getPersistence() !== arDropFile::PERSISTENCE_SMALL);
    }
    
    public function isSelfUser($userProfileId)
    {
       return  ($this->getUserId() === $userProfileId);
    }
    
    public function isShareForUser($userProfileId)
    {
        return (Doctrine_Core::getTable('arDropFileEnc')
                    ->countByFileId($this->getId(), $userProfileId) > 0);
    }
    
    
    public function delete(Doctrine_Connection $conn = null)
    {
        $conn = $conn ? $conn : $this->getTable()->getConnection();
        $conn->beginTransaction();
        try
        {
            $count = Doctrine_Core::getTable('arDropFilePreview')
                            ->countBy($this->getId());
            if ($count > 0)
            {
               $listFilePreviews = Doctrine_Core::getTable('arDropFilePreview')
                            ->getByDropId($this->getId());
               foreach ($listFilePreviews as $filePreview)
               { 
                    $filePreview->delete($conn);
               }
            }
            
            $countChunks = Doctrine_Core::getTable('arDropFileChunk')
                            ->countById($this->getId());
            
            if ($countChunks > 0)
            {
                $listFileChunks = Doctrine_Core::getTable('arDropFileChunk')
                            ->getByDropId($this->getId());
                
                foreach ($listFileChunks as $chunk)
                { 
                    $chunk->delete($conn);
                }
            }
            
            $ret = parent::delete($conn);

            $conn->commit();

            return $ret;
        }
        catch (Exception $e)
        {
            $conn->rollBack();
            throw $e;
        
            return false;
        }
    }
    /**
     * devuelve una parte del archivo
     * 
     * @param <int $pos>
     * @return <arDropFileChunk>
     */
    public function getChunk($pos)
    {
       return Doctrine_Core::getTable('arDropFileChunk')
               ->getByDropIdAndPos($this->getId(), $pos);
    }
    
    public function countChunks()
    {
       
       return Doctrine_Core::getTable('arDropFileChunk')
               ->countById($this->getId());
    }
    
    public function isValidStyle($style)
    {
       return in_array($style, 
                          arDropFile::$fileStyle); 
    }
    
    public static function isValidInputConversionExt($style)
    {
       return in_array($style, 
                          arDropFile::$inputExt); 
    }
    
    public static function isValidOutputConversionExt($style)
    {
       return in_array($style, 
                          arDropFile::$outExt); 
    }
    
    public function getPreviewChuck($style, $pos)
    {
        return Doctrine_Core::getTable('arDropFileChunkPreview')
                ->getByDropIdStyleAndPos($this->getId(), $style, $pos); 
    }
    
    public function getPreview($style)
    {
      return Doctrine_Core::getTable('arDropFilePreview')
               ->getByDropIdAndStyle($this->getId(), $style);
    }
    /**
     * es un tipo de elemento que se puede visualizar en los controles
     * 
     * @return boolean: true si se puede ver
     */
    public function isVisorType()
    {
      return ($this->isMimeVisorType() || $this->isImageType()); 
    }
    
    public function isMimeVisorType()
    {
        return in_array($this->getType(), 
                          arDropFile::$appMime);
    }
    
    public function isImageType()
    {
        return in_array($this->getType(), 
                          arDropFile::$imageMime);
         
    }
    
    public function getFileIcon()
    {
        $ret = '';
        if (isset(arDropFile::$allMimeTypes[$this->getType()]))
        {
          $ret  = 'ad-icon-'. arDropFile::$allMimeTypes[$this->getType()];
        }
        
        return $ret;
         
    }
    
    
    public function getMiniImageSrc()
    {
        $ret = '';
        
        if ($this->isImageType()
            && (Doctrine_Core::getTable('arDropFilePreview')
                     ->countById($this->getId(), arDropFile::$fileStyle[0]) > 0))
        {
            $arDropFilePreview = Doctrine_Core::getTable('arDropFilePreview')
                                    ->getByDropIdAndStyle($this->getId(), arDropFile::$fileStyle[0]);
                
            $countChunks = $arDropFilePreview->countChunks();
            
            if ($arDropFilePreview && ($countChunks > 0))
            {
                $chunks = $arDropFilePreview->getChunks();
                
                if ($chunks && is_array($chunks))
                {
                  for ($i = 0; ($i < $countChunks);$i++)
                  {
                    if (($i + 1) <  $countChunks)
                    {
                      $ret .=  $chunks[$i] . '|';  
                    }
                    else
                    {
                      $ret .=   $chunks[$i] ;  
                    }
                  } 
                }
            }
            else if ($arDropFilePreview)
            {
               $ret .=  $arDropFilePreview->getSrc();
            }
        }
        
        return $ret;
        
    }
    

    public function getHumanFileSize()
    {
      return $this->humanFilesize($this->getSize());
    }

    private function humanFilesize($bytes, $decimals = 2) 
    {
        $size = array('B','kB','MB','GB','TB','PB','EB','ZB','YB');
        $factor = floor((strlen($bytes) - 1) / 3);
        return sprintf("%.{$decimals}f", $bytes / pow(1024, $factor)) . @$size[$factor];
    }

}