<?php

/**
 * PluginarGmapsLocateTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PluginarGmapsLocateTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object PluginarGmapsLocateTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('PluginarGmapsLocate');
    }
    /**
     * última localización del usuario
     * 
     * @param <int $profileId>: id del profile de usuario
     * @return <arGmapsLocate>
     */
    public function retrieveLast($profileId, $forProfileId = false)
    {
         $q = Doctrine_Query::create()
            ->from('arGmapsLocate l')
            ->leftJoin('l.arUsersGmapsLocate ul')
            ->where('ul.profile_id = ?',$profileId)
            ->orderBy('ul.created_at DESC');
         
         if (sfConfig::get('app_arquematics_encrypt', false) && $forProfileId)
         {
             
           $q->leftJoin('l.EncContent ec ON (l.id = ec.locate_id)')
              ->andWhere('ec.user_id = ?',$forProfileId);
         }
         
         //echo $q->getSqlQuery();
          
        return $q->fetchOne();
    }
    /**
     * mira si una peticion de geolocalización esta ya en 
     * la base de datos
     * 
     * @param <string $query>: peticion de localización por texto
     * @return <arGmapsLocate>
     */
    public function getGeocodeRequest($query)
    {
          $query = Doctrine_Query::create()
            ->from('arGmapsLocate l')
            ->where('l.formated_address = ?',$query);
          
          return $query->fetchOne();
    }
    
    public static function getMessageLocations($messageId, $profileId = false, $conn = false)
    {
        
         $q = Doctrine::getTable('arGmapsLocate')->createQuery('l')
            ->leftJoin('l.arGmapsLocateHasArWallMessage lm')
            ->where('lm.wall_message_id = ?',$messageId);
         
         if ($profileId && sfConfig::get('app_arquematics_encrypt', false))
         {
             
           $q->leftJoin('l.EncContent ec ON (l.id = ec.locate_id AND ec.user_id = ?)',$profileId)
              ->andWhere('ec.user_id = ?',$profileId);
         }
         
         if ($conn)
         {
           $q->setConnection($conn);  
         }
       
         
         //echo $q->getSqlQuery();
         
         return $q->execute();
    }
    
    /**
     * devuelve los recursos por array de ids
     *
     * @param <array $ids> 
     * @param [int $profileId] opcional. $profileId no se usa al guardar en menssage->save
     * 
     * @return <array of arGmapsLocate>
     */
    public static function getByIds($ids, $profileId = false)
    {

        $q = Doctrine_Query::create()
            ->from('arGmapsLocate l')
            ->whereIn('l.id',$ids);
        
        if ($profileId && sfConfig::get('app_arquematics_encrypt', false))
        {
             
           $q->leftJoin('l.EncContent ec ON (l.id = ec.locate_id AND ec.user_id = ?)',$profileId)
              ->andWhere('ec.user_id = ?',$profileId);
        }
        

        return $q->execute();
    }
    
    public static function getByHash($hash)
    {
        $q = Doctrine::getTable('arGmapsLocate')
              ->createQuery('l')
              ->where('l.hash = ?',$hash);
        
        return $q->fetchOne();
    }
}