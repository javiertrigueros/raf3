<?php

/**
 * PluginarDropFilePreviewTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PluginarDropFilePreviewTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object PluginarDropFilePreviewTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('PluginarDropFilePreview');
    }
    
     /**
     *
     * @param <int $drop_file_id> 
     * @param <string $size_style normal|small|big|large>
     * 
     * @return <arDropFilePreview>
     */
    public static function getByDropIdAndStyle($drop_file_id, $size_style)
    {
        $q = Doctrine_Core::getTable('arDropFilePreview')
               ->createQuery('c')
               ->where('(c.drop_file_id = ?) AND (c.size_style LIKE ?)',  array($drop_file_id, $size_style));
        
        return $q->fetchOne();
    }

    public static function countById($drop_file_id, $size_style)
    {
        $q = Doctrine_Core::getTable('arDropFilePreview')
               ->createQuery('c')
               ->where('(c.drop_file_id = ?) AND (c.size_style LIKE ?)',  array($drop_file_id, $size_style))
               ->select('COUNT(c.id) as id');
        
        return $q->execute(array(), Doctrine_Core::HYDRATE_SINGLE_SCALAR);
    }
    
    public static function countBy($drop_file_id, $conn = false)
    {
        $q = Doctrine_Core::getTable('arDropFilePreview')
               ->createQuery('c')
               ->where('c.drop_file_id = ?',  array($drop_file_id))
               ->select('COUNT(c.id) as id');
        
       if ($conn)
       {
           $q->setConnection($conn);
       }
        
        
       return $q->execute(array(), Doctrine_Core::HYDRATE_SINGLE_SCALAR);
    }
    
    public static function getByDropId($drop_file_id, $conn = false)
    {
        $q = Doctrine_Core::getTable('arDropFilePreview')
               ->createQuery('c')
               ->where('c.drop_file_id = ?',  array($drop_file_id));
        
       if ($conn)
       {
           $q->setConnection($conn);
       }
        
        
        return $q->execute();
    }
    
    
}