<?php

/**
 * PluginarProfileListTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PluginarProfileListTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object PluginarProfileListTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('PluginarProfileList');
    }
    /**
     * Listas de las que es administrador menos la principal
     * 
     * @param <int $profileID>
     * @param [string $order]
     * @return <array of arProfileList> 
     */
    
    public static function getAdminListNoMain($profileID, $order = 'ASC')
    {
        
        $q = Doctrine::getTable('arProfileList')->createQuery('c')
            ->orderBy('c.name '.strtoupper($order))
            //->andWhere("c.is_all = false")
            ->andWhere('c.profile_id = ?', $profileID);

        //echo $profileID;
        //echo $q->getSqlQuery();
        
        return $q->execute();
    }
    
    /**
     * todas las listas de las que se es administrador
     * 
     * @param <int $profileID>
     * @param <conn $conn>
     * 
     * @return <array|int>
     */
    
    public static function getAdminList($profileID,$conn = false)
    {
       if ($conn)
       {
          $q = Doctrine_Query::create($conn)
                ->from('arProfileList l')
                ->andWhere('l.profile_id = ?', $profileID)
                ->select('l.id profile_list_id');  
       }
       else
       {
           $q = Doctrine::getTable('arProfileList')->createQuery('l')
                ->andWhere('l.profile_id = ?', $profileID)
                ->select('l.id profile_list_id'); 
       }
        //echo $q->getSqlQuery();
       
      
        return $q->execute(array(),Doctrine_Core::HYDRATE_SINGLE_SCALAR);
    }
    
   
    
    /**
     * Lista principal del perfil
     * 
     * @param <int $profileID>

     * @return <arProfileList> 
     */
    /*
    public static function getMainList($profileID, $conn = false)
    {
        if (!$conn)
        {
            $q = Doctrine::getTable('arProfileList')->createQuery('c')
            ->andWhere("c.is_all = true")
            ->andWhere('c.profile_id = ?', $profileID);
        }
        else
        {
            $q = Doctrine_Query::create($conn)
            ->from('arProfileList c')
            ->andWhere("c.is_all = true")
            ->andWhere('c.profile_id = ?', $profileID);
        }
        

        return $q->fetchOne();
    }*/
    
    /**
     * cuenta las listas de las que es administrador menos la principal
     * 
     * @param <int $profileID>
     * @return <int>
     */
    
    public static function countAdminList($profileID)
    {
         $q = Doctrine::getTable('arProfileList')->createQuery('c')
            //->andWhere('c.is_all = false')
            ->andWhere('c.profile_id = ?', $profileID)
            ->select('COUNT(c.id)');
         
         return $q->execute(array(), Doctrine_Core::HYDRATE_SINGLE_SCALAR);
    }
    
    
    
    /**
     * mira si el usuario es administrador de la lista
     * 
     * @return <boolean>
     */
    public static function isAdminProfile($listId, $userId)
    {
       $q = Doctrine_Core::getTable('arProfileList')->createQuery('c')
            ->where('c.profile_id = ?',  $userId)
            ->andWhere('c.id = ?',  $listId)
            ->select('COUNT(c.id)');

        return ($q->execute(array(), Doctrine_Core::HYDRATE_SINGLE_SCALAR) > 0);
    }
    /**
     * cuenta el numero de peticiones de amistad que le han hecho a un usuario
     * 
     * @param <int $profileID>
     * @return <int>
     */
    /*
    public static function countFriendRequest($profileID)
    {
       /*
        
         $q = Doctrine::getTable('sfGuardUserProfile')
                 ->createQuery('p')
                ->leftJoin( 'p.ProfileList l')
                ->where('l.is_all = true')
                ->andWhere("l.id IN (SELECT lp.profile_list_id FROM arProfileListHasProfile lp WHERE lp.profile_id = ?  AND lp.is_accept = false AND lp.is_block = false AND lp.is_ignore = false)",$profileID)
                ->select('count(DISTINCT (p.id))');*/
        
      /*   $q = Doctrine::getTable('sfGuardUserProfile')
                 ->createQuery('u')
                ->leftJoin( 'u.Friends f')
                ->where('(f.friend_id = ?) AND (f.profile_id <> f.friend_id)', $profileID)
                ->andWhere('f.is_accept = false')
                ->andWhere('f.is_ignore = false')
                ->andWhere('f.is_block = false')
                ->select('count(*) as count');
        
        //echo $q->getSqlQuery();
        return $q->execute(array(), Doctrine_Core::HYDRATE_SINGLE_SCALAR);
    }*/
    
    public static function hasProfileId($listId, $profileId, $conn = false)
    {
        if (!$conn)
        {
           $q = Doctrine_Core::getTable('sfGuardUserProfile')
            ->createQuery('s')
            ->leftJoin( 's.arProfileListHasProfile as hp')
            ->where('hp.profile_list_id = ?',  $listId)
            ->andWhere('hp.profile_id = ?',  $profileId)
            ->select('COUNT(s.id)');  
        }
        else {
            $q = Doctrine_Query::create($conn)
             ->from('sfGuardUserProfile s')
             ->leftJoin( 's.arProfileListHasProfile as hp')
            ->where('hp.profile_list_id = ?',  $listId)
            ->andWhere('hp.profile_id = ?',  $profileId)
            ->select('COUNT(s.id)');  
        }
        
        return ($q->execute(array(), Doctrine_Core::HYDRATE_SINGLE_SCALAR) > 0);
    
    }
    /*
    public static function getFriendRequest($profileID)
    {
      /*
        
        $q = Doctrine::getTable('sfGuardUserProfile')
                ->createQuery('p')
                ->leftJoin( 'p.ProfileList l')
                ->where('l.is_all = true')
                ->andWhere("l.id IN (SELECT lp.profile_list_id FROM arProfileListHasProfile lp WHERE lp.profile_id = ?  AND lp.is_accept = false AND lp.is_block = false AND lp.is_ignore = false)",$profileID)
                ->groupBy('p.id');*/
        
      /*  $q = Doctrine::getTable('sfGuardUserProfile')
                 ->createQuery('u')
                ->leftJoin( 'u.Friends f')
                ->where('(f.friend_id = ?) AND (f.profile_id <> f.friend_id)', $profileID)
                ->andWhere('f.is_accept = false')
                ->andWhere('f.is_ignore = false')
                ->andWhere('f.is_block = false');*/
                 
       //echo $q->getSqlQuery();
       /* return $q->execute();
    }*/
    
    /**
     * 
     * cuenta las peticiones que hace un perfil de otro perfil
     * en las diferentes listas.
     * 
     * @param int $profileID
     * @param int $findProfileID
     * 
     * @return <boolean>: true si tiene una peticion de amistad
     */
    /*
    public static function countProfileHasRequest($profileID, $findProfileID, $conn = false)
    {
        if (!$conn)
        {
           $q = Doctrine::getTable('sfGuardUserProfile')->createQuery('p')
                  ->leftJoin('p.arProfileListHasProfile hp')
                  ->leftJoin('hp.List l')
                  ->where('l.is_all = false')
                  ->andWhere('hp.profile_id = ?',$findProfileID)
                  ->andWhere("hp.profile_list_id IN (SELECT lp.profile_list_id FROM arProfileListHasProfile lp WHERE lp.profile_id = ? AND lp.is_accept = true)",$profileID)
                  ->select('count(p.id)');
        }
        else
        {
             $q = Doctrine_Query::create($conn)
                  ->from('sfGuardUserProfile p')
                  ->leftJoin('p.arProfileListHasProfile hp')
                  ->leftJoin('hp.List l')
                  ->where('l.is_all = false')
                  ->andWhere('hp.profile_id = ?',$findProfileID)
                  ->andWhere("hp.profile_list_id IN (SELECT lp.profile_list_id FROM arProfileListHasProfile lp WHERE lp.profile_id = ?  AND lp.is_accept = true)",$profileID)
                  ->select('count(p.id)');
                     
        }
       
        
        return $q->execute(array(), Doctrine_Core::HYDRATE_SINGLE_SCALAR);
    }*/
    
    /**
     * devuelve las listas por array de ids
     *
     * @param <array $ids> 
     * 
     * @return <array>
     */
    public static function getByIds($ids, $conn = false)
    {
        
        if (!$conn)
        {
             $q = Doctrine_Query::create()
                ->from('arProfileList d')
                ->whereIn('d.id',$ids);
        }
        else
        {
             $q = Doctrine_Query::create($conn)
                    ->from('arProfileList d')
                    ->where("d.id = ?", $ids);
        }
       
        return $q->execute();
    }  
    
    
  /**
  * devuelve un registro por la id
  * 
  * @param <$id>
  * @return <arProfileList>
  */
  public static function retrieveById($id, $conn = false)
  {
    if (!$conn)
    {
        $q = Doctrine::getTable('arProfileList')->createQuery('c')
            ->where("c.id = ?", $id); 
    }
    else
    {
        $q = Doctrine_Query::create($conn)
            ->from('arProfileList c')
            ->where("c.id = ?", $id);
    }
    return $q->fetchOne();
  }
  
  public static function hasProfileIdName($profileId, $listname)
  {
     $q = Doctrine::getTable('arProfileList')
            ->createQuery('l')
            ->where('l.profile_id = ?', $profileId)
            ->andWhere('l.name = ?', $listname)
            ->select('count(l.id)');
    
     
    return ($q->execute(array(), Doctrine_Core::HYDRATE_SINGLE_SCALAR) > 0);
  }
  
}